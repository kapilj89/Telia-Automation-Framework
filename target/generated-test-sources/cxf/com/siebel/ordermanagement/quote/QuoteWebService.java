package com.siebel.ordermanagement.quote;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2020-01-24T13:42:49.444+05:30
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "QuoteWebService",
                  wsdlLocation = "file:/C:/siebel_encrypt/siebel-api-test/src/test/resources/wsdlfiles/QuoteWebService.WSDL",
                  targetNamespace = "http://siebel.com/OrderManagement/Quote")
public class QuoteWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://siebel.com/OrderManagement/Quote", "QuoteWebService");
    public final static QName QuotePort = new QName("http://siebel.com/OrderManagement/Quote", "QuotePort");
    public final static QName QuoteItemPort = new QName("http://siebel.com/OrderManagement/Quote", "QuoteItemPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/siebel_encrypt/siebel-api-test/src/test/resources/wsdlfiles/QuoteWebService.WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(QuoteWebService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/siebel_encrypt/siebel-api-test/src/test/resources/wsdlfiles/QuoteWebService.WSDL");
        }
        WSDL_LOCATION = url;
    }

    public QuoteWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public QuoteWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QuoteWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public QuoteWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public QuoteWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public QuoteWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns QuotePort
     */
    @WebEndpoint(name = "QuotePort")
    public QuotePort getQuotePort() {
        return super.getPort(QuotePort, QuotePort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QuotePort
     */
    @WebEndpoint(name = "QuotePort")
    public QuotePort getQuotePort(WebServiceFeature... features) {
        return super.getPort(QuotePort, QuotePort.class, features);
    }


    /**
     *
     * @return
     *     returns QuoteItemPort
     */
    @WebEndpoint(name = "QuoteItemPort")
    public QuoteItemPort getQuoteItemPort() {
        return super.getPort(QuoteItemPort, QuoteItemPort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QuoteItemPort
     */
    @WebEndpoint(name = "QuoteItemPort")
    public QuoteItemPort getQuoteItemPort(WebServiceFeature... features) {
        return super.getPort(QuoteItemPort, QuoteItemPort.class, features);
    }

}
